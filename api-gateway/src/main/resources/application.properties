server.port=8080

spring.application.name=api-gateway

user_management_service.name=user-management-service
student_performance_service.name=student-performance-service
payment_service.name=payment-service
communication_service.name=communication-service
admin_service.name=admin-service

# Springdoc OpenAPI Configuration for Aggregated Swagger UI
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.urls[0].url=/v3/api-docs/user-service
springdoc.swagger-ui.urls[0].name=User Management Service
springdoc.swagger-ui.urls[1].url=/v3/api-docs/student-service
springdoc.swagger-ui.urls[1].name=Student Performance Service
springdoc.swagger-ui.urls[2].url=/v3/api-docs/payment-service
springdoc.swagger-ui.urls[2].name=Payment Service
springdoc.swagger-ui.urls[3].url=/v3/api-docs/communication-service
springdoc.swagger-ui.urls[3].name=Communication Service
springdoc.swagger-ui.urls[4].url=/v3/api-docs/admin-service
springdoc.swagger-ui.urls[4].name=Admin Service

# Disable Eureka Client for now, we're doing static routing
# spring.cloud.discovery.enabled=false

# Default properties for Spring Cloud Gateway
# You can define routes here too, but using a Java @Bean is more flexible for complex logic
# spring.cloud.gateway.routes:
#   - id: user_management_service
#     uri: http://localhost:8081
#     predicates:
#       - Path=/api/users/**
#   - id: student_performance_service
#     uri: http://localhost:8080
#     predicates:
#       - Path=/api/students/**
#   # ... add other routes

