server.port=8084

spring.application.name=communication-service

# Eureka Client Configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.hostname=localhost

# MongoDB Database Configuration
# Recommended: Use the URI for a clear and complete configuration.
spring.data.mongodb.uri=mongodb://localhost:27017/parentPortalCommunication

# URLs for other microservices that Communication Service will call
user-management-service.url=user-management-service

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.consumer.group-id=communication-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# Allow deserialization of generic objects
spring.kafka.consumer.properties.spring.json.value.default.type=java.lang.Object

# Springdoc OpenAPI Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.packagesToScan=com.parent.portal.Notification.service.controller
springdoc.pathsToMatch=/api/communication/**
springdoc.info.title=Notification Service API
springdoc.info.description=API for managing notifications in the Parent Portal.
springdoc.info.version=1.0.0
